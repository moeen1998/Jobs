// <auto-generated />
using Jobs.EF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jobs.EF.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Jobs.Core.Models.Position", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Requirement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Salary")
                        .HasColumnType("real");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Company = "Coptic Orphans",
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit. Beatae accusamus voluptatem error natus earum animi dolores, iure qui repellendus repellat perferendis, molestiae cumque dolore pariatur praesentium illo. Nihil, nostrum odit!",
                            IsDeleted = false,
                            Location = "Sheraton",
                            Requirement = "2-4 years of related professional experience",
                            Salary = 40000f,
                            Title = "MD Full-Stack Developer"
                        },
                        new
                        {
                            ID = 2,
                            Company = "Coptic Orphans",
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit. Beatae accusamus voluptatem error natus earum animi dolores, iure qui repellendus repellat perferendis, molestiae cumque dolore pariatur praesentium illo. Nihil, nostrum odit!",
                            IsDeleted = false,
                            Location = "Sheraton",
                            Requirement = "4-8 years of related professional experience",
                            Salary = 60000f,
                            Title = "SR Full-Stack Developer"
                        },
                        new
                        {
                            ID = 3,
                            Company = "Company name",
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit. Beatae accusamus voluptatem error natus earum animi dolores, iure qui repellendus repellat perferendis, molestiae cumque dolore pariatur praesentium illo. Nihil, nostrum odit!",
                            IsDeleted = false,
                            Location = "test Location",
                            Requirement = "0-2 years of related professional experience",
                            Salary = 30000f,
                            Title = "JR .net Developer"
                        },
                        new
                        {
                            ID = 4,
                            Company = "Company name",
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit. Beatae accusamus voluptatem error natus earum animi dolores, iure qui repellendus repellat perferendis, molestiae cumque dolore pariatur praesentium illo. Nihil, nostrum odit!",
                            IsDeleted = false,
                            Location = "test Location",
                            Requirement = "4-8 years of related professional experience",
                            Salary = 55000f,
                            Title = "SR .net Developer"
                        });
                });

            modelBuilder.Entity("Jobs.Core.Models.PositionApplication", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ApplicantEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DbFilename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PositionID");

                    b.ToTable("PositionApplications");
                });

            modelBuilder.Entity("Jobs.Core.Models.PositionApplication", b =>
                {
                    b.HasOne("Jobs.Core.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });
#pragma warning restore 612, 618
        }
    }
}
